/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Componants;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.TitledBorder;
import javax.swing.colorchooser.AbstractColorChooserPanel;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import Main.*;

/**
 *
 * @author Wissam
 */
public class TheBuilderPanel extends javax.swing.JPanel {

    private CellPanel[][] mybuttons;
    //private Dot[][] dots ;

    public CellPanel[][] getMybuttons() {
        return mybuttons;
    }

    private int levelLeangth;

    /**
     * Creates new form TheBuilderPanel
     */
    public TheBuilderPanel(int levelLeangth) {
        this.levelLeangth = levelLeangth;
        initMyComponents();
        initComponentsN();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void initMyComponents() {
        mybuttons = new CellPanel[levelLeangth][levelLeangth];
        for (int i = 0; i < mybuttons.length; i++) {
            final int fi = i;

            for (int j = 0; j < mybuttons.length; j++) {
                final int fj = j;
                mybuttons[i][j] = new CellPanel(i, j, false, false, false, null);
                mybuttons[i][j].addMouseListener(new myCellPanelListener() {

                    @Override
                    public void mousePressed(MouseEvent e) {
                        super.mousePressed(e); //To change body of generated methods, choose Tools | Templates.

                        changeSupport.firePropertyChange("MatrixAndColor", mybuttons, mybuttons[fi][fj]);
                    }

                }
                );
            }
        };

    }

    private void initComponentsN() {

        this.setBackground(Color.DARK_GRAY);
        GridLayout gridLayout = new GridLayout(mybuttons.length, mybuttons.length, 0, 0);
        this.setLayout(gridLayout);
        for (CellPanel[] buttons : mybuttons) {
            for (CellPanel button : buttons) {
                this.add(button);
            }
        }

    }

    private PropertyChangeSupport changeSupport;

    public void addListener(PropertyChangeListener listener) {
        if (listener == null) {
            return;
        }
        if (changeSupport == null) {
            changeSupport = new PropertyChangeSupport(this);
        }
        changeSupport.addPropertyChangeListener(listener);
    }

}

class myCellPanelListener extends MouseAdapter {

    @Override
    public void mouseExited(MouseEvent e) {
        super.mouseExited(e); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        super.mouseEntered(e); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        super.mouseReleased(e); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mousePressed(MouseEvent e) {
        super.mousePressed(e); //To change body of generated methods, choose Tools | Templates.
    }

}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

